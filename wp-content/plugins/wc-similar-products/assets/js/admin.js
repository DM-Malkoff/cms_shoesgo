jQuery(document).ready(function($) {
    var $button = $('#recalculate-similarities');
    var $progressWrapper = $('.progress-wrapper');
    var $progress = $('.progress');
    var $status = $('.progress-status');
    var $processedList = $('<div class="processed-products"></div>').insertAfter($progress);
    var $processingMode = $('#processing-mode');
    var $categoriesRow = $('#categories-row');
    var $productCategories = $('#product-categories');
    var $selectedInfo = $('#selected-info');
    var $fixButton = $('#fix-missing-similarities');
    var $categoriesSearch = $('#categories-search');
    var $selectFoundBtn = $('#select-found-categories');
    var $clearCategoriesBtn = $('#clear-categories-selection');
    var $toggleViewBtn = $('#toggle-categories-view');
    var $foundCount = $('#found-count');
    var $selectedCount = $('#selected-categories-count');
    var $visibleCount = $('#visible-categories-count');
    var $totalProducts = $('#categories-total-products');
    var isProcessing = false;
    var showOnlySelected = false;
    var retryCount = 0;
    var maxRetries = 3;
    var delayBetweenBatches = 2000; // 2 —Å–µ–∫—É–Ω–¥—ã –º–µ–∂–¥—É –ø–∞–∫–µ—Ç–∞–º–∏ (—É–º–µ–Ω—å—à–∏–ª–∏, —Ç–∞–∫ –∫–∞–∫ –±–∞—Ç—á–∏ –º–µ–Ω—å—à–µ)
    var ajaxTimeout = 180000; // 3 –º–∏–Ω—É—Ç—ã —Ç–∞–π–º–∞—É—Ç
    var processedProducts = [];
    var statsTimeout;
    
    // –û–±—Ä–∞–±–æ—Ç–∫–∞ –∏–∑–º–µ–Ω–µ–Ω–∏—è —Ä–µ–∂–∏–º–∞ –æ–±—Ä–∞–±–æ—Ç–∫–∏
    function updateProcessingMode() {
        var mode = $processingMode.val();
        var showCategories = (mode === 'categories' || mode === 'categories_new');
        
        if (showCategories) {
            $categoriesRow.show();
        } else {
            $categoriesRow.hide();
        }
        
        updateSelectedInfo();
    }
    
    // –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ –≤—ã–±—Ä–∞–Ω–Ω—ã—Ö –ø–∞—Ä–∞–º–µ—Ç—Ä–∞—Ö
    function updateSelectedInfo() {
        var mode = $processingMode.val();
        var selectedCategories = $productCategories.val() || [];
        
        // –ë–ª–æ–∫–∏—Ä—É–µ–º –∫–Ω–æ–ø–∫—É –µ—Å–ª–∏ –Ω—É–∂–Ω–æ –≤—ã–±—Ä–∞—Ç—å –∫–∞—Ç–µ–≥–æ—Ä–∏–∏
        var needCategories = (mode === 'categories' || mode === 'categories_new') && selectedCategories.length === 0;
        $button.prop('disabled', needCategories && !isProcessing);
        
        // –ü–æ–ª—É—á–∞–µ–º —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É —Å —Å–µ—Ä–≤–µ—Ä–∞ —Å –∑–∞–¥–µ—Ä–∂–∫–æ–π (debounce)
        clearTimeout(statsTimeout);
        statsTimeout = setTimeout(function() {
            getProductStats(mode, selectedCategories);
        }, 500);
    }
    
    // –ü–æ–ª—É—á–µ–Ω–∏–µ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏ —Ç–æ–≤–∞—Ä–æ–≤
    function getProductStats(mode, selectedCategories) {
        $selectedInfo.html('<i>–ü–æ–¥—Å—á–∏—Ç—ã–≤–∞–µ–º —Ç–æ–≤–∞—Ä—ã...</i>');
        
        $.ajax({
            url: wcSimilarProducts.ajax_url,
            type: 'POST',
            data: {
                action: 'get_category_stats',
                nonce: wcSimilarProducts.stats_nonce,
                processing_mode: mode,
                categories: selectedCategories
            },
            success: function(response) {
                if (response.success) {
                    var data = response.data;
                    var info = '';
                    
                                         switch(mode) {
                        case 'all':
                            info = '‚ö†Ô∏è –ë—É–¥—É—Ç –æ–±—Ä–∞–±–æ—Ç–∞–Ω—ã –≤—Å–µ —Ç–æ–≤–∞—Ä—ã (' + data.total_products + ' —à—Ç.) - –í–°–ï –î–ê–ù–ù–´–ï –ë–£–î–£–¢ –û–ß–ò–©–ï–ù–´!';
                            break;
                        case 'categories':
                            if (selectedCategories.length > 0) {
                                info = '–ë—É–¥—É—Ç –æ–±—Ä–∞–±–æ—Ç–∞–Ω—ã —Ç–æ–≤–∞—Ä—ã –∏–∑ ' + selectedCategories.length + ' –∫–∞—Ç–µ–≥–æ—Ä–∏–π (' + data.total_products + ' —à—Ç.)';
                            } else {
                                info = '–í—ã–±–µ—Ä–∏—Ç–µ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ –¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏';
                            }
                            break;
                        case 'new':
                            info = '–ë—É–¥—É—Ç –æ–±—Ä–∞–±–æ—Ç–∞–Ω—ã —Ç–æ–ª—å–∫–æ —Ç–æ–≤–∞—Ä—ã –±–µ–∑ –ø–æ—Ö–æ–∂–∏—Ö —Ç–æ–≤–∞—Ä–æ–≤ (' + data.total_products + ' —à—Ç.)';
                            break;
                        case 'categories_new':
                            if (selectedCategories.length > 0) {
                                info = '–ë—É–¥—É—Ç –æ–±—Ä–∞–±–æ—Ç–∞–Ω—ã –Ω–æ–≤—ã–µ —Ç–æ–≤–∞—Ä—ã –∏–∑ ' + selectedCategories.length + ' –∫–∞—Ç–µ–≥–æ—Ä–∏–π (' + data.total_products + ' —à—Ç.)';
                            } else {
                                info = '–í—ã–±–µ—Ä–∏—Ç–µ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ –¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏';
                            }
                            break;
                    }
                    
                    $selectedInfo.text(info);
                } else {
                    $selectedInfo.text('–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏');
                }
            },
            error: function() {
                $selectedInfo.text('–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏');
            }
        });
    }
    
    // –°–æ–±—ã—Ç–∏–µ –∏–∑–º–µ–Ω–µ–Ω–∏—è —Ä–µ–∂–∏–º–∞ –æ–±—Ä–∞–±–æ—Ç–∫–∏
    $processingMode.on('change', updateProcessingMode);
    
    // –§—É–Ω–∫—Ü–∏–∏ –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å –∫–∞—Ç–µ–≥–æ—Ä–∏—è–º–∏
    function searchCategories(searchTerm) {
        var $options = $productCategories.find('option');
        var foundCount = 0;
        
        // –£–±–∏—Ä–∞–µ–º –ø—Ä–µ–¥—ã–¥—É—â—É—é –ø–æ–¥—Å–≤–µ—Ç–∫—É
        $options.removeClass('search-highlight');
        
        searchTerm = searchTerm.toLowerCase().trim();
        
        if (searchTerm === '') {
            // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –≤—Å–µ –æ–ø—Ü–∏–∏
            $options.show();
            foundCount = $options.length;
        } else {
            $options.each(function() {
                var $option = $(this);
                var categoryName = $option.data('name') || '';
                var categoryText = $option.text().toLowerCase();
                
                if (categoryName.includes(searchTerm) || categoryText.includes(searchTerm)) {
                    $option.show().addClass('search-highlight');
                    foundCount++;
                } else if (!showOnlySelected) {
                    $option.hide().removeClass('search-highlight');
                } else if (!$option.is(':selected')) {
                    $option.hide().removeClass('search-highlight');
                }
            });
        }
        
        // –û–±–Ω–æ–≤–ª—è–µ–º —Å—á–µ—Ç—á–∏–∫–∏
        $foundCount.text(foundCount);
        $selectFoundBtn.prop('disabled', foundCount === 0);
        updateCategoriesInfo();
    }
    
    function selectFoundCategories() {
        var $highlighted = $productCategories.find('option.search-highlight:visible');
        $highlighted.prop('selected', true);
        updateCategoriesInfo();
        updateSelectedInfo();
    }
    
    function clearCategoriesSelection() {
        $productCategories.find('option').prop('selected', false);
        updateCategoriesInfo();
        updateSelectedInfo();
    }
    
    function toggleCategoriesView() {
        showOnlySelected = !showOnlySelected;
        var $options = $productCategories.find('option');
        
        if (showOnlySelected) {
            $options.each(function() {
                var $option = $(this);
                if ($option.is(':selected')) {
                    $option.show();
                } else {
                    $option.hide();
                }
            });
            $toggleViewBtn.text('üìã –ü–æ–∫–∞–∑–∞—Ç—å –≤—Å–µ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏');
        } else {
            // –ü—Ä–∏–º–µ–Ω—è–µ–º —Ç–µ–∫—É—â–∏–π –ø–æ–∏—Å–∫
            searchCategories($categoriesSearch.val());
            $toggleViewBtn.text('üëÅÔ∏è –ü–æ–∫–∞–∑–∞—Ç—å —Ç–æ–ª—å–∫–æ –≤—ã–±—Ä–∞–Ω–Ω—ã–µ');
        }
        
        updateCategoriesInfo();
    }
    
    function updateCategoriesInfo() {
        var selectedCategories = $productCategories.val() || [];
        var visibleOptions = $productCategories.find('option:visible').length;
        var totalProducts = 0;
        
        // –ü–æ–¥—Å—á–∏—Ç—ã–≤–∞–µ–º –æ–±—â–µ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —Ç–æ–≤–∞—Ä–æ–≤ –≤ –≤—ã–±—Ä–∞–Ω–Ω—ã—Ö –∫–∞—Ç–µ–≥–æ—Ä–∏—è—Ö
        if (selectedCategories.length > 0) {
            $productCategories.find('option:selected').each(function() {
                var count = parseInt($(this).data('count')) || 0;
                totalProducts += count;
            });
            $totalProducts.text('(~' + totalProducts.toLocaleString() + ' —Ç–æ–≤–∞—Ä–æ–≤)');
        } else {
            $totalProducts.text('');
        }
        
        $selectedCount.text('–í—ã–±—Ä–∞–Ω–æ: ' + selectedCategories.length);
        $visibleCount.text('–ü–æ–∫–∞–∑–∞–Ω–æ: ' + visibleOptions);
    }
    
    // –û–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ —Å–æ–±—ã—Ç–∏–π –¥–ª—è –∫–∞—Ç–µ–≥–æ—Ä–∏–π
    $categoriesSearch.on('input', function() {
        var searchTerm = $(this).val();
        
        // –î–æ–±–∞–≤–ª—è–µ–º –∫–ª–∞—Å—Å –∞–Ω–∏–º–∞—Ü–∏–∏ –ø—Ä–∏ –ø–æ–∏—Å–∫–µ
        if (searchTerm.length > 0) {
            $(this).addClass('searching');
        } else {
            $(this).removeClass('searching');
        }
        
        searchCategories(searchTerm);
    });
    
    // –ü–æ–∏—Å–∫ –ø–æ Enter
    $categoriesSearch.on('keydown', function(e) {
        if (e.keyCode === 13) { // Enter
            e.preventDefault();
            if (!$selectFoundBtn.prop('disabled')) {
                selectFoundCategories();
            }
        } else if (e.keyCode === 27) { // Escape
            $(this).val('');
            searchCategories('');
        }
    });
    
    $selectFoundBtn.on('click', selectFoundCategories);
    $clearCategoriesBtn.on('click', clearCategoriesSelection);
    $toggleViewBtn.on('click', toggleCategoriesView);
    
    $productCategories.on('change', function() {
        updateCategoriesInfo();
        updateSelectedInfo();
    });
    
    // –î–≤–æ–π–Ω–æ–π –∫–ª–∏–∫ –¥–ª—è –±—ã—Å—Ç—Ä–æ–≥–æ –ø–æ–∏—Å–∫–∞ –ø–æ–ø—É–ª—è—Ä–Ω—ã—Ö —Ç–µ—Ä–º–∏–Ω–æ–≤
    $categoriesSearch.on('dblclick', function() {
        var popularSearches = ['–æ–±—É–≤—å', '–æ–¥–µ–∂–¥–∞', '–∞–∫—Å–µ—Å—Å—É–∞—Ä—ã', '—Å—É–º–∫–∏', '—á–∞—Å—ã'];
        var randomSearch = popularSearches[Math.floor(Math.random() * popularSearches.length)];
        $(this).val(randomSearch);
        searchCategories(randomSearch);
    });
    
    // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è
    updateProcessingMode();
    updateCategoriesInfo();
    
    function formatPrice(price) {
        return price ? new Intl.NumberFormat('ru-RU', { 
            style: 'currency', 
            currency: 'RUB'
        }).format(price) : '';
    }
    
    function updateProcessedList(product) {
        if (!product) return;
        
        // –î–æ–±–∞–≤–ª—è–µ–º —Ç–æ–≤–∞—Ä –≤ –º–∞—Å—Å–∏–≤
        processedProducts.push(product);
        
        // –°–æ–∑–¥–∞–µ–º HTML –¥–ª—è —Ç–æ–≤–∞—Ä–∞
        var productHtml = '<div class="product-item">';
        
        // –î–æ–±–∞–≤–ª—è–µ–º –º–∏–Ω–∏–∞—Ç—é—Ä—É
        if (product.thumbnail) {
            productHtml += '<img src="' + product.thumbnail + '" class="product-thumbnail" alt="' + product.title + '" />';
        } else {
            productHtml += '<div class="product-placeholder">–ù–µ—Ç —Ñ–æ—Ç–æ</div>';
        }
        
        // –î–æ–±–∞–≤–ª—è–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ —Ç–æ–≤–∞—Ä–µ
        productHtml += '<div class="product-info">';
        productHtml += '<div class="product-title">' + product.title + '</div>';
        if (product.sku) {
            productHtml += '<div class="product-meta">SKU: ' + product.sku + '</div>';
        }
        if (product.price) {
            productHtml += '<div class="product-meta product-price">' + formatPrice(product.price) + '</div>';
        }
        productHtml += '</div>';
        
        // –î–æ–±–∞–≤–ª—è–µ–º —Å—Å—ã–ª–∫–∏
        productHtml += '<div class="product-actions">';
        if (product.view_link) {
            productHtml += '<a href="' + product.view_link + '" target="_blank" class="button">–ü—Ä–æ—Å–º–æ—Ç—Ä</a>';
        }
        if (product.edit_link) {
            productHtml += '<a href="' + product.edit_link + '" target="_blank" class="button">–†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å</a>';
        }
        productHtml += '</div>';
        
        productHtml += '</div>';
        
        // –î–æ–±–∞–≤–ª—è–µ–º —Ç–æ–≤–∞—Ä –≤ –Ω–∞—á–∞–ª–æ —Å–ø–∏—Å–∫–∞
        $processedList.prepend(productHtml);
        
        // –û–≥—Ä–∞–Ω–∏—á–∏–≤–∞–µ–º –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø–æ–∫–∞–∑—ã–≤–∞–µ–º—ã—Ö —Ç–æ–≤–∞—Ä–æ–≤ –¥–ª—è –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç–∏
        var items = $processedList.find('.product-item');
        if (items.length > 50) {
            items.slice(50).remove();
        }
    }
    
    function updateStatus(message, isError) {
        $status.html(message);
        if (isError) {
            $status.css('color', '#dc3232');
        } else {
            $status.css('color', '');
        }
    }
    
    function processBatch(batch) {
        if (!isProcessing) return;
        
        updateStatus(wcSimilarProducts.processing_text.replace('%s', '0') + '<br><small>Processing batch ' + batch + '</small>');
        
        $.ajax({
            url: wcSimilarProducts.ajax_url,
            type: 'POST',
            data: {
                action: 'recalculate_similarities_batch',
                nonce: wcSimilarProducts.nonce,
                batch: batch,
                processing_mode: $processingMode.val(),
                categories: $productCategories.val() || []
            },
            timeout: ajaxTimeout,
            success: function(response) {
                if (response.success) {
                    var data = response.data;
                    retryCount = 0; // –°–±—Ä–∞—Å—ã–≤–∞–µ–º —Å—á–µ—Ç—á–∏–∫ –ø–æ–≤—Ç–æ—Ä–æ–≤ –ø—Ä–∏ —É—Å–ø–µ—Ö–µ
                    
                    // –û–±–Ω–æ–≤–ª—è–µ–º –ø—Ä–æ–≥—Ä–µ—Å—Å
                    $progress.css('width', data.percentage + '%');
                    updateStatus(
                        wcSimilarProducts.processing_text.replace('%s', data.percentage) + 
                        '<br><small>Processed: ' + data.processed + ' of ' + data.total + '</small>'
                    );
                    
                    // –û–±–Ω–æ–≤–ª—è–µ–º —Å–ø–∏—Å–æ–∫ –æ–±—Ä–∞–±–æ—Ç–∞–Ω–Ω—ã—Ö —Ç–æ–≤–∞—Ä–æ–≤
                    if (data.product) {
                        updateProcessedList(data.product);
                    }
                    
                    if (!data.complete) {
                        // –ü—Ä–æ–¥–æ–ª–∂–∞–µ–º —Å —Å–ª–µ–¥—É—é—â–∏–º –ø–∞–∫–µ—Ç–æ–º
                        setTimeout(function() {
                            processBatch(batch + 1);
                        }, delayBetweenBatches);
                    } else {
                        // –ó–∞–≤–µ—Ä—à–∞–µ–º –ø—Ä–æ—Ü–µ—Å—Å
                        isProcessing = false;
                        $button.prop('disabled', false);
                        updateStatus(wcSimilarProducts.success_text);
                        
                        // –°–∫—Ä—ã–≤–∞–µ–º –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–µ –æ –Ω–µ–¥–æ—Å—Ç–∞—é—â–∏—Ö —Ç–æ–≤–∞—Ä–∞—Ö –µ—Å–ª–∏ –æ–Ω–æ –µ—Å—Ç—å
                        $('.missing-similarities-warning').fadeOut();
                        
                        setTimeout(function() {
                            $progressWrapper.fadeOut();
                        }, 2000);
                    }
                } else {
                    handleError(response.data || 'Unknown error occurred');
                }
            },
            error: function(jqXHR, textStatus, errorThrown) {
                console.error('AJAX Error:', {
                    status: jqXHR.status,
                    statusText: jqXHR.statusText,
                    responseText: jqXHR.responseText,
                    textStatus: textStatus,
                    errorThrown: errorThrown
                });
                
                var errorMessage = 'Error occurred: ';
                if (textStatus === 'timeout') {
                    errorMessage += 'Request timed out. The operation is taking too long.';
                } else if (textStatus === 'error' && jqXHR.status === 500) {
                    errorMessage += 'Server error occurred.';
                } else {
                    errorMessage += textStatus || 'Unknown error';
                }
                
                // –ü—Ä–æ–±—É–µ–º –ø–æ–≤—Ç–æ—Ä–∏—Ç—å –∑–∞–ø—Ä–æ—Å –ø—Ä–∏ –æ—à–∏–±–∫–µ
                if (retryCount < maxRetries) {
                    retryCount++;
                    updateStatus('Retrying... Attempt ' + retryCount + ' of ' + maxRetries + '<br><small>' + errorMessage + '</small>', true);
                    setTimeout(function() {
                        processBatch(batch);
                    }, delayBetweenBatches * 2); // –£–≤–µ–ª–∏—á–∏–≤–∞–µ–º –∑–∞–¥–µ—Ä–∂–∫—É –ø—Ä–∏ –ø–æ–≤—Ç–æ—Ä–µ
                } else {
                    handleError(errorMessage);
                }
            }
        });
    }
    
    function handleError(error) {
        isProcessing = false;
        $button.prop('disabled', false);
        updateStatus(wcSimilarProducts.error_text + '<br><small>' + error + '</small>', true);
        console.error('Error:', error);
    }
    
    $button.on('click', function() {
        if (isProcessing) return;
        
        // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –Ω—É–∂–Ω–æ –ª–∏ –≤—ã–±—Ä–∞—Ç—å –∫–∞—Ç–µ–≥–æ—Ä–∏–∏
        var mode = $processingMode.val();
        var selectedCategories = $productCategories.val() || [];
        var needCategories = (mode === 'categories' || mode === 'categories_new') && selectedCategories.length === 0;
        
        if (needCategories) {
            alert('–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤—ã–±–µ—Ä–∏—Ç–µ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ –¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏.');
            return;
        }
        
        // –§–æ—Ä–º–∏—Ä—É–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è
        var confirmMessage = '–í—ã —É–≤–µ—Ä–µ–Ω—ã, —á—Ç–æ —Ö–æ—Ç–∏—Ç–µ –ø–µ—Ä–µ—Å—á–∏—Ç–∞—Ç—å –ø–æ—Ö–æ–∂–∏–µ —Ç–æ–≤–∞—Ä—ã?\n\n';
        switch(mode) {
            case 'all':
                confirmMessage += '‚ö†Ô∏è –í–ù–ò–ú–ê–ù–ò–ï! –ë—É–¥—É—Ç –æ–±—Ä–∞–±–æ—Ç–∞–Ω—ã –í–°–ï —Ç–æ–≤–∞—Ä—ã –≤ –∫–∞—Ç–∞–ª–æ–≥–µ.\n';
                confirmMessage += '‚ö†Ô∏è –í–°–ï –°–£–©–ï–°–¢–í–£–Æ–©–ò–ï –°–í–Ø–ó–ò –ü–û–•–û–ñ–ò–• –¢–û–í–ê–†–û–í –ë–£–î–£–¢ –£–î–ê–õ–ï–ù–´!\n';
                confirmMessage += '–≠—Ç–æ –¥–µ–π—Å—Ç–≤–∏–µ –ù–ï–õ–¨–ó–Ø –æ—Ç–º–µ–Ω–∏—Ç—å!';
                break;
            case 'categories':
                confirmMessage += '–ë—É–¥—É—Ç –æ–±—Ä–∞–±–æ—Ç–∞–Ω—ã —Ç–æ–≤–∞—Ä—ã –∏–∑ ' + selectedCategories.length + ' –≤—ã–±—Ä–∞–Ω–Ω—ã—Ö –∫–∞—Ç–µ–≥–æ—Ä–∏–π.\n';
                confirmMessage += '–°—É—â–µ—Å—Ç–≤—É—é—â–∏–µ —Å–≤—è–∑–∏ –¥–ª—è —ç—Ç–∏—Ö —Ç–æ–≤–∞—Ä–æ–≤ –±—É–¥—É—Ç –∑–∞–º–µ–Ω–µ–Ω—ã –Ω–æ–≤—ã–º–∏.';
                break;
            case 'new':
                confirmMessage += '–ë—É–¥—É—Ç –æ–±—Ä–∞–±–æ—Ç–∞–Ω—ã —Ç–æ–ª—å–∫–æ —Ç–æ–≤–∞—Ä—ã –±–µ–∑ –ø–æ—Ö–æ–∂–∏—Ö —Ç–æ–≤–∞—Ä–æ–≤.\n';
                confirmMessage += '–°—É—â–µ—Å—Ç–≤—É—é—â–∏–µ —Å–≤—è–∑–∏ –ù–ï –±—É–¥—É—Ç –∑–∞—Ç—Ä–æ–Ω—É—Ç—ã.';
                break;
            case 'categories_new':
                confirmMessage += '–ë—É–¥—É—Ç –æ–±—Ä–∞–±–æ—Ç–∞–Ω—ã –Ω–æ–≤—ã–µ —Ç–æ–≤–∞—Ä—ã –∏–∑ ' + selectedCategories.length + ' –≤—ã–±—Ä–∞–Ω–Ω—ã—Ö –∫–∞—Ç–µ–≥–æ—Ä–∏–π.\n';
                confirmMessage += '–°—É—â–µ—Å—Ç–≤—É—é—â–∏–µ —Å–≤—è–∑–∏ –¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∞–Ω–Ω—ã—Ö —Ç–æ–≤–∞—Ä–æ–≤ –ù–ï –±—É–¥—É—Ç –∑–∞—Ç—Ä–æ–Ω—É—Ç—ã.';
                break;
        }
        confirmMessage += '\n\n–ü—Ä–æ—Ü–µ—Å—Å –º–æ–∂–µ—Ç –∑–∞–Ω—è—Ç—å –Ω–µ–∫–æ—Ç–æ—Ä–æ–µ –≤—Ä–µ–º—è.';
        
        if (!confirm(confirmMessage)) {
            return;
        }
        
        isProcessing = true;
        retryCount = 0;
        processedProducts = [];
        $button.prop('disabled', true);
        $progressWrapper.show();
        $progress.css('width', '0%');
        $processedList.empty();
        updateStatus(wcSimilarProducts.processing_text.replace('%s', '0'));
        
        processBatch(0);
    });
    
    // –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–ª—è –∫–Ω–æ–ø–∫–∏ "–ò—Å–ø—Ä–∞–≤–∏—Ç—å"
    $fixButton.on('click', function() {
        if (isProcessing) return;
        
        if (!confirm('–ó–∞–ø—É—Å—Ç–∏—Ç—å –æ–±—Ä–∞–±–æ—Ç–∫—É —Ç–æ–≤–∞—Ä–æ–≤ –±–µ–∑ –ø–æ—Ö–æ–∂–∏—Ö —Ç–æ–≤–∞—Ä–æ–≤?\n\n–≠—Ç–æ –±–µ–∑–æ–ø–∞—Å–Ω–∞—è –æ–ø–µ—Ä–∞—Ü–∏—è - —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–µ —Å–≤—è–∑–∏ –ù–ï –±—É–¥—É—Ç –∑–∞—Ç—Ä–æ–Ω—É—Ç—ã.')) {
            return;
        }
        
        // –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –≤—ã–±–∏—Ä–∞–µ–º —Ä–µ–∂–∏–º "new"
        $processingMode.val('new');
        updateProcessingMode();
        
        // –ó–∞–ø—É—Å–∫–∞–µ–º –æ–±—Ä–∞–±–æ—Ç–∫—É
        setTimeout(function() {
            $button.click();
        }, 500);
    });
}); 